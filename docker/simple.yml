# This file can be used as an example to use docker-in-docker in CI
# See all required values to create your own CI using dind


variables:
  # Required to connect to the docker socket on tls port
  DOCKER_HOST: tcp://docker:2376
  # Required to read the docker daemon ssl certs
  DOCKER_TLS_CERTDIR: "/certs"
  # Required to verify certs
  DOCKER_TLS_VERIFY: 1
  # Required to be able to read the docker client certificates
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

.build-image:
  image: docker:19.03.13-dind
  stage: build
  # Required to have access to a docker-in-docker daemon
  services:
    - docker:19.03.13-dind
  variables:
    DOCKER_BUILD_PATH: $DOCKER_BUILD_PATH
    DOCKER_IMAGE_VERSION: $CI_COMMIT_REF_NAME
    DOCKER_REPO: $CI_REGISTRY_IMAGE
    DOCKER_IMAGE_NAME: $DOCKER_IMAGE_NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_TAG
      when: never
  script:
    - make cnf=/dev/null version
    - make cnf=/dev/null build
  tags:
    # This is the runner which is allowed to access the docker socket
    - docker-in-docker
  # Before script is required to prepare the connection to the docker daemon
  before_script:
    - apk update
    - apk add --no-cache make bash tar gzip
    # Required to wait for the docker daemon to generate certificates before we try connecting to it
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ -n "${DOCKER_BUILD_PATH:=""}" ]; then cd "$DOCKER_BUILD_PATH"; fi
.publish-image:
  image: docker:19.03.13-dind
  stage: publish
  services:
    - docker:19.03.13-dind
  variables:
    DOCKER_BUILD_PATH: $DOCKER_BUILD_PATH
    DOCKER_IMAGE_VERSION: $CI_COMMIT_REF_NAME
    DOCKER_REPO: $CI_REGISTRY_IMAGE
    DOCKER_IMAGE_NAME: $DOCKER_IMAGE_NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_TAG
      when: always
  script:
    - make cnf=/dev/null version
    - make cnf=/dev/null build
    - make cnf=/dev/null release
  tags:
    - docker-in-docker
  before_script:
    - apk update
    - apk add --no-cache make bash tar gzip
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ -n "${DOCKER_BUILD_PATH:=""}" ]; then cd "$DOCKER_BUILD_PATH"; fi
